
name: Spark build single image template

on:
  workflow_call:
    inputs:
      image:
        description: The spark image name (ex. spark-base, spark, spark-py, spark-r, etc)
        required: true
        type: string
      spark_version:
        description: Spark version
        required: true
        type: string
      scala_version:
        description: Scala version
        required: true
        type: string
      java_version:
        description: Java version
        required: true
        type: string
      hadoop_version:
        description: Hadoop version
        required: true
        type: string
      python_version:
        description: Python version
        required: true
        type: string
      push_to_registry:
        description: Wheter to push to the registry
        required: false
        type: string
        default: "false"
      registry:
        description: The container registry 
        required: false
        type: string
      runs-on:
        description: GitHub Actions Runner image
        required: true
        type: string
        
    secrets:
      registry_username:
        required: false
      registry_token:
        required: false

jobs:
  
  build-test-push:
    name: ${{ inputs.image }} (spark-${{ inputs.spark_version }}, scala-${{ inputs.scala_version }}, java-${{ inputs.java_version }}, python-${{ inputs.python_version }})
    runs-on: ${{ inputs.runs-on }}
    services:
      registry:
        image: registry:2
        ports:
          # Nektos/Act - Mac Control Center 5000 port conflict
          - 5003:5000
    steps:
      - name: Checkout Repo ⚡️
        uses: actions/checkout@v4

      - name: Free up disk space 📦
        uses: ./.github/actions/free-disk-space

      - name: Set up QEMU and Docker Buildx 📦
        uses: ./.github/actions/setup-buildx

      - name: Set up local registry 📦
        id: local-registry
        run:  |
            echo "repo_owner=${GITHUB_REPOSITORY_OWNER@L}" >> $GITHUB_OUTPUT
            echo "ci_repo=localhost:5003/${GITHUB_REPOSITORY_OWNER@L}" >> $GITHUB_OUTPUT
        shell: bash

      - name: Generate image tags 📦
        id: image-tags
        uses: ./.github/actions/spark-image-tag
        with:
          image: ${{ inputs.image }}
          spark_version: ${{ inputs.spark_version}}
          scala_version: ${{ inputs.scala_version }}
          java_version: ${{ inputs.java_version }}
          python_version: ${{ inputs.python_version}}
          publish_repo: ${{ inputs.registry }}/${{ steps.local-registry.outputs.repo_owner }}

      - name: Build and push to local registry (${{ inputs.spark_version}} > 3.0)
        if: inputs.push_to_registry == 'false' && !startsWith( ${{ inputs.spark_version }}, "2.")
        uses: docker/build-push-action@v3
        with:
          context: ${{ inputs.image }}
          platforms: linux/amd64,linux/arm64
          push: true
          build-args: |
            SPARK_VERSION=${{ inputs.spark_version}}
            SCALA_VERSION=${{ inputs.scala_version }}
            JAVA_VERSION=${{ inputs.java_version }}
            HADOOP_VERSION=${{ inputs.hadoop_version }}
            BASE_IMAGE=${{ steps.image-tags.outputs.parent_image }}
          tags: |
            ${{ steps.local-registry.outputs.ci_repo }}/${{ inputs.image }}:${{ steps.image-tags.outputs.ci_tag }}

      # https://github.com/nektos/act/issues/678
      - name: Checkout Spark tag v${{ inputs.spark_version }} (${{ inputs.spark_version}} > 3.0) ⚡️
        if: inputs.push_to_registry == 'false' && !startsWith( ${{ inputs.spark_version }}, "2.")
        id: git-checkout-tag
        run: |
          CHECKOUT_TAG_DIR="$(mktemp -d)/spark"
          git clone https://github.com/apache/spark.git ${CHECKOUT_TAG_DIR}
          cd ${CHECKOUT_TAG_DIR}
          git checkout v${{ inputs.spark_version }}
          echo "checkout_directory=${CHECKOUT_TAG_DIR}" >> $GITHUB_OUTPUT
        shell: bash

      - name: Prepare Integration Tests env (${{ inputs.spark_version}} > 3.0) 📦
        if: inputs.push_to_registry == 'false' && !startsWith( ${{ inputs.spark_version }}, "2.")
        uses: ./.github/actions/spark-tests-prepare
        with:
          spark_version: ${{ inputs.spark_version}}
          scala_version: ${{ inputs.scala_version }}
          java_version: ${{ inputs.java_version }}

      - name: Set up Kind k8s cluster (${{ inputs.spark_version}} > 3.0) 📦
        if: inputs.push_to_registry == 'false' && !startsWith( ${{ inputs.spark_version }}, "2.")
        uses: ./.github/actions/setup-kind

      - name: Run Integration Tests (${{ inputs.spark_version}} > 3.0) ✅
        if: inputs.push_to_registry == 'false' && !startsWith( ${{ inputs.spark_version }}, "2.")
        uses: ./.github/actions/spark-tests-run
        with:
          ci-repo: ${{ steps.local-registry.outputs.ci_repo }}
          image: ${{ inputs.image }}
          image-tag: ${{ steps.image-tags.outputs.ci_tag }}
          git_checkout_tag_dir: ${{ steps.git-checkout-tag.outputs.checkout_directory }}

      - name: Login to Registry
        if: inputs.push_to_registry == 'true'
        uses: docker/login-action@v3
        with:
          registry: ${{ inputs.registry }}
          username: ${{ secrets.registry_username }}
          password: ${{ secrets.registry_token }}

      - name: Build and push to registry
        if: inputs.push_to_registry == 'true'
        uses: docker/build-push-action@v3
        with:
          context: images/spark/spark-base
          platforms: linux/amd64,linux/arm64
          push: true
          build-args: |
            SPARK_VERSION=${{ inputs.spark_version}}
            SCALA_VERSION=${{ inputs.scala_version }}
            JAVA_VERSION=${{ inputs.java_version }}
            HADOOP_VERSION=${{ inputs.hadoop_version }}
            BASE_IMAGE=${{ steps.image-tags.outputs.parent_image }}
          tags: ${{ steps.image-tags.outputs.publish_tags }}
