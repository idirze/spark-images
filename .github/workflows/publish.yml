#
# Copyright 2024 tosit.io
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

name: publish 

on:
  schedule:
    # At 05:00 AM, only on Tuesday
    #- cron: "0 5 * * 2"
    # At 05:00 AM, only on Friday
    - cron: "0 5 * * 5"
  release:
    types: [published]

  workflow_dispatch:

# https://docs.github.com/en/actions/using-jobs/using-concurrency
concurrency:
  # Only cancel in-progress jobs or runs for the current workflow - matches against branch & tags
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  packages: write
  
jobs:
  
  latest-github-release:
    if: github.repository_owner == 'idirze'
    runs-on: "ubuntu-latest"
    outputs:
      tag_name: ${{ steps.git-release-tag.outputs.tag_name }}
    steps:
      - name: Checkout Repo ‚ö°Ô∏è
        uses: actions/checkout@v4

      - name: Get latest GitHub Release tag name üì•
        id: git-release-tag
        uses: InsonusK/get-latest-release@v1.0.1
        with:
          myToken: ${{ github.token }}
          exclude_types: "draft"
          view_top: 1
      
      - name: Info - Found latest release tag
        run: |
            echo "id: ${{ steps.git-release-tag.outputs.id }}"
            echo "name: ${{ steps.git-release-tag.outputs.name }}"
            echo "tag_name: ${{ steps.git-release-tag.outputs.tag_name }}"
            echo "created_at: ${{ steps.git-release-tag.outputs.created_at }}"
            echo "draft: ${{ steps.git-release-tag.outputs.draft }}"
            echo "prerelease: ${{ steps.git-release-tag.outputs.prerelease }}"
        shell: bash

  spark-publish:
    if: github.repository_owner == 'idirze' && needs.latest-github-release.outputs.tag_name != ''
    name: spark-publish (spark-${{ matrix.spark_version }})
    needs: [latest-github-release]
    strategy:
      matrix: 
        python_version: [3.11]
        spark_version: [3.3.3, 3.3.4]
        java_version: [17]
        scala_version: [2.12]
        hadoop_version: [3]
    uses: ./.github/workflows/build-images-template.yml
    with:
      python_version: ${{ matrix.python_version }}
      spark_version: ${{ matrix.spark_version }}
      java_version: ${{ matrix.java_version }}
      scala_version: ${{ matrix.scala_version }}
      hadoop_version: ${{ matrix.hadoop_version }}
      registry: ${{ vars.REGISTRY || 'quay.io' }}
      publish_to_registry: "true"
      git_latest_release_tag: ${{ needs.latest-github-release.outputs.tag_name }}
    secrets: inherit

      